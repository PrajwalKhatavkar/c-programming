#include <stdio.h>

int maxConsecutiveOnes(int* nums, int numsSize, int k) {
    int left = 0, right;
    int max_ones = 0, zero_count = 0;

    for (right = 0; right < numsSize; ++right) {
        if (nums[right] == 0) {
            zero_count++;
        }

        // If the number of zeros in the window exceeds k, slide the window to the right
        while (zero_count > k) {
            if (nums[left] == 0) {
                zero_count--;
            }
            left++;
        }

        // Update max_ones if the current window size is greater
        max_ones = (right - left + 1 > max_ones) ? right - left + 1 : max_ones;
    }

    return max_ones;
}

int main() {
    int nums1[] = {1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0};
    int k1 = 2;
    int numsSize1 = sizeof(nums1) / sizeof(nums1[0]);
    printf("Output for nums1: %d\n", maxConsecutiveOnes(nums1, numsSize1, k1));

    int nums2[] = {0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1};
    int k2 = 3;
    int numsSize2 = sizeof(nums2) / sizeof(nums2[0]);
    printf("Output for nums2: %d\n", maxConsecutiveOnes(nums2, numsSize2, k2));

    return 0;
}
